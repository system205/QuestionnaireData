"Timestamp","Put these libraries in the order from the most preferable to the least: [1 (most preferable)]","Put these libraries in the order from the most preferable to the least: [2]","Put these libraries in the order from the most preferable to the least: [3]","Put these libraries in the order from the most preferable to the least: [4]","Put these libraries in the order from the most preferable to the least: [5 (least preferable)]","Please explain why you chose such an answer. What metrics (list 3-5) were you based on?","Select at least 2 options:","Your full name:","Your working position or company:","Your working experience:","How many bugs have you reported for the last year?","Where to send the results of our research? (Your Telegram, Mail etc.)"
"2023/11/19 7:29:36 PM GMT+3","SWXMLHash","Fuzi","libexpat","xgen","quick-xml","Considering that functionality is the same for all of them, and that my project doesn't depend on language of lib, I would choose the freshest library with the lowest amount of code (because it directly affects maintainability of lib), and then take a look at amount of stars.","Better explain how to reproduce it","","Tech Lead of Frontend Dev","4+ years","~10",""
"2023/11/19 10:09:20 PM GMT+3","SWXMLHash","Fuzi","quick-xml","xgen","libexpat","Слишком мало инфы для выбора. Я в таких случаях заглядываю в код и выбираю более понятную библиотеку. В случае проблем чтобы можно было самим фиксить баги.

В данной таблице выбор пал на более новые библиотеки с не слишком большой кодовой базой. Вероятно не спроста делали еще одну библиотеку. Количество звездочек влияет, но не в первую очередь. Смотрю чисто для понимания сколько людей этим пользуются. Ну и форки тоже хороший показатель. Чем их больше, тем чаще пользуются библиотекой","Better explain how to reproduce it;Read user manual, maybe you do something wrong","","iOS dev","13","-",""
"2023/11/20 2:57:10 AM GMT+3","quick-xml","libexpat","SWXMLHash","Fuzi","xgen","Last commit date, lines of code, primary programming language and stars.","Read user manual, maybe you do something wrong;Better explain how to reproduce it;Get rid of the redundant 3--minute video","","","","",""
"2023/11/20 2:14:33 PM GMT+3","libexpat","quick-xml","SWXMLHash","Fuzi","xgen","libexpat has many contributors and closed bug reports, it's also written in many lines of C and is quite popular, all such metrics indicate an efficient l, well-written , popular and maintained library.","Better explain how to reproduce it;Read user manual, maybe you do something wrong;Specify its priority and severity;Get rid of the redundant 3--minute video","","DevOps Engineer","~1 year","",""
"2023/11/20 11:09:53 PM GMT+3","quick-xml","SWXMLHash","xgen","Fuzi","libexpat","Release date and last commit is primary metrics (old project which still have regular updates looks good). Secondary: how hard is it to read source code (language and lines of code). Anyway main metric is out of scope: how many projects use library.","Specify its priority and severity;Better explain how to reproduce it","","Software Developer","","",""
"2023/11/29 3:31:23 PM GMT+3","libexpat","xgen","quick-xml","Fuzi","SWXMLHash","Based on amount of starts, lines of code and implementation language","Better explain how to reproduce it;Specify its priority and severity","","","","",""
"2023/11/29 3:31:33 PM GMT+3","libexpat","xgen","quick-xml","SWXMLHash","Fuzi","Language performance, maintainers' support, popularity","Specify its priority and severity;Get rid of the redundant 3--minute video","","junior Inforamtion Security Specialist","2 months","around 5",""
"2023/11/29 3:41:49 PM GMT+3","libexpat","SWXMLHash","quick-xml","Fuzi","xgen","Primary programming language, number of stars, last commit and number of contributors","Better explain how to reproduce it;Specify its priority and severity","","","","",""
"2023/11/29 3:49:39 PM GMT+3","SWXMLHash","Fuzi","libexpat","xgen","quick-xml","Closed bug reports doesn’t mean anything because this usually depends on the programming language.
Stars is a good metric which I prefer.
Lines of code also doesn’t mean anything.
Release date - I won't choose something to old or to young.
Language depends on my purposes.
Other metrics also don't mean anything to me.
","Read user manual, maybe you do something wrong;Better explain how to reproduce it;Get rid of the redundant 3--minute video","","","","",""
"2023/11/29 4:12:07 PM GMT+3","quick-xml","xgen","libexpat","SWXMLHash","Fuzi","1. There should be a familiar language
2. Amount of forks + stars
3. Last commit + release date + closed bug reports
4. Amount of contributors + closed issues","Read user manual, maybe you do something wrong;Better explain how to reproduce it;Specify its priority and severity","","","","",""
"2023/11/29 4:23:49 PM GMT+3","xgen","libexpat","quick-xml","SWXMLHash","Fuzi","Programming language, release date","Read user manual, maybe you do something wrong;Better explain how to reproduce it","","","","",""
"2023/11/29 4:34:24 PM GMT+3","libexpat","quick-xml","SWXMLHash","Fuzi","xgen","First of all I want FAST and WORKING solution. C and Rust languages are pretty fast and more over as I can see libexpat and quick-xml are actively developing based on last commit days. Also they have a lot of closed issue, so I conclude that developers listen to the community and fix bugs and add features. The same for bug report number. In addition they had many contributors. Indeed for me they are most preferable. Other libraries are written on exotic languages (SWIFT is language developed by APPLE for their needs not to parse XML!!!) and are not much supported by developers. ","Specify its priority and severity","","Student","unemployed","0",""
"2023/11/29 8:11:07 PM GMT+3","libexpat","quick-xml","SWXMLHash","Fuzi","xgen","last commit, closed issues, contributors","Get rid of the redundant 3--minute video;Instead, post to project chat, for a faster fix","","","1 year software engineer","5-10",""
"2023/11/30 5:30:15 PM GMT+3","SWXMLHash","Fuzi","libexpat","quick-xml","xgen","Most important metric — stars. Then release date should not be too long ago","Specify its priority and severity;Better explain how to reproduce it;Read user manual, maybe you do something wrong","","","","",""
"2023/11/30 8:11:41 PM GMT+3","libexpat","SWXMLHash","xgen","Fuzi","quick-xml","Release Date, Stars, Lines of Code","Get rid of the redundant 3--minute video;Read user manual, maybe you do something wrong;Specify its priority and severity","","","","",""
"2023/11/30 8:15:20 PM GMT+3","quick-xml","Fuzi","libexpat","xgen","SWXMLHash","top 1 -> language;
top 2 -> last commit;
top 3 -> contributers","Get rid of the redundant 3--minute video;Better explain how to reproduce it","","","","",""
"2023/11/30 8:16:47 PM GMT+3","libexpat","quick-xml","SWXMLHash","Fuzi","xgen","I would prefer libraries to be popular among devs and always up to date","Specify its priority and severity;Better explain how to reproduce it","","","","",""
"2023/11/30 9:10:27 PM GMT+3","quick-xml","SWXMLHash","libexpat","Fuzi","xgen","Stars, release date, xloses issues","Read user manual, maybe you do something wrong;Specify its priority and severity","","","","",""
"2023/11/30 9:18:28 PM GMT+3","libexpat","SWXMLHash","quick-xml","Fuzi","xgen","Stars,  last commit, prs","Specify its priority and severity;Better explain how to reproduce it;Get rid of the redundant 3--minute video","","","","",""
"2023/11/30 9:59:17 PM GMT+3","quick-xml","libexpat","xgen","Fuzi","SWXMLHash","Language, Last commit date, GitHub stars","Better explain how to reproduce it;Read user manual, maybe you do something wrong","","SRE @ Tinkoff","3+ years","maybe 5-10, at least i did 3 PRs",""
"2023/11/30 11:34:49 PM GMT+3","SWXMLHash","quick-xml","libexpat","Fuzi","xgen","Number of start, programming laguage, start and closed issues / release date ","Better explain how to reproduce it;Instead, post to project chat, for a faster fix","","","","",""
"2023/12/02 8:34:49 PM GMT+3","xgen","libexpat","quick-xml","Fuzi","SWXMLHash","Language, release date, lines of code","Specify its priority and severity;Get rid of the redundant 3--minute video;Better explain how to reproduce it","","","","",""
"2023/12/02 8:38:14 PM GMT+3","quick-xml","Fuzi","SWXMLHash","xgen","libexpat","libexpat too big, 
other are placed in terms of hype: how many people have tried it(according to reports, stars and forks)","Instead, post to project chat, for a faster fix;Better explain how to reproduce it","","","","",""
"2023/12/02 9:33:21 PM GMT+3","SWXMLHash","xgen","Fuzi","quick-xml","libexpat","Firstly, I chose the least preferable choice (libexpat) based on lines of code per day since release date. It is kinda suspiciously high number, so the quality of product could be questioned (in my opinion). 

The forth place is for ""quick-xml"", since Rust is created recently and such big number of days since release date is also suspicious. However, the language is promising, so the forth place.

Fuzi and xgen are both questionable because of small number of closed bug reports. It could be so due to lack discipline related to documenting bug fixes. Anyway, it seems to me that there is a better choice.

""SWXMLHash"" is the best choice among other presented because it seems that it has average metrics on all criteria. Also, all others seems suspicious to me","Specify its priority and severity;Read user manual, maybe you do something wrong","","","","",""
"2023/12/02 9:37:41 PM GMT+3","libexpat","SWXMLHash","Fuzi","quick-xml","xgen","Stars / Release date (S) - Indicates approximately how many stars the library gained each day. I assume it represents the popularity and relevance of the repository. I will give this metric a weight of 2.

Closed issues / Release date (C) - Indicates how actively the project is being maintained each day, which I think is an important factor. I will give this metric a weight of 3.

Last commit (L) - Recent changes mean the library is being actively developed. I gave this metric a weight of 1.

Closed pull requests / Release date (PR) - Also indicates how actively the project is being maintained, which is an important factor. I gave this metric a weight of 2.

Final metric used: (2 * S + 3 * C + (1 / L) + 2 * PR) / 8.","Specify its priority and severity;Better explain how to reproduce it","","Leetcode","< 2 years","10",""
"2023/12/02 10:17:46 PM GMT+3","SWXMLHash","Fuzi","libexpat","quick-xml","xgen","Mainly on stars, with considering closed bug reports, closed number of issues, and last commit","Get rid of the redundant 3--minute video;Better explain how to reproduce it","","Student","Small projects only","0",""
"2023/12/03 9:06:07 AM GMT+3","quick-xml","xgen","SWXMLHash","Fuzi","libexpat","I went with quick-xml mainly because it's the oldest one (release date), yet it's still supported (last commit date), and because it has the most amount of contributors. This way I am more confident about the reliability of the library","Read user manual, maybe you do something wrong;Get rid of the redundant 3--minute video;Specify its priority and severity","","","","0-3",""
"2023/12/03 9:12:37 AM GMT+3","SWXMLHash","xgen","Fuzi","quick-xml","libexpat","-","Specify its priority and severity;Instead, post to project chat, for a faster fix","","","","",""
"2023/12/04 11:24:46 AM GMT+3","SWXMLHash","libexpat","quick-xml","Fuzi","xgen","Language, stars","Specify its priority and severity","","yandex backend software developer","2 years","0",""
"2023/12/04 11:29:56 AM GMT+3","SWXMLHash","libexpat","quick-xml","Fuzi","xgen","Basically, I looked for the size of community. Stars, release date, contributors.","Specify its priority and severity;Better explain how to reproduce it","","Engineering Manager","6 years","12 - 24",""
"2023/12/04 11:30:00 AM GMT+3","quick-xml","libexpat","SWXMLHash","Fuzi","xgen","Last commit, Stars, Programming language","Get rid of the redundant 3--minute video;Better explain how to reproduce it;Specify its priority and severity","","Senior Software Developer","8+ years","~5-10",""
"2023/12/04 11:33:48 AM GMT+3","SWXMLHash","libexpat","quick-xml","Fuzi","xgen","community activity from higher to lower: Stars, Contributors, Pull requests, issues bugs ...","Read user manual, maybe you do something wrong;Specify its priority and severity","","","5+ y.","50+",""
"2023/12/04 11:33:51 AM GMT+3","libexpat","quick-xml","Fuzi","SWXMLHash","xgen","I chose more ""live"" libraries: where there are more closed issues and bugs, where there are more forks.","Better explain how to reproduce it;Specify its priority and severity","","","","",""
"2023/12/04 11:43:48 AM GMT+3","xgen","quick-xml","libexpat","SWXMLHash","Fuzi","For sure, one day, something will go wrong. In this case, what library code I can fork, read and fix? So I need a familiar programming language and a small code base. Swift is the last choice for me, the first is Go, then C. But libexpat has too many lines of code, so, may be, quick-xml (Rust) is better choice for the second. ","Better explain how to reproduce it;Specify its priority and severity","","Senior Software Engineer","12","15",""
"2023/12/04 11:44:23 AM GMT+3","SWXMLHash","Fuzi","xgen","quick-xml","libexpat","release date, stars, closed issues, count of contributors, lines of code","Instead, post to project chat, for a faster fix;Get rid of the redundant 3--minute video","","Senior Developer","20+ years","10+",""
"2023/12/04 11:53:43 AM GMT+3","SWXMLHash","libexpat","quick-xml","Fuzi","xgen","Loc, closed issues, bug reports, last commit","Specify its priority and severity;Get rid of the redundant 3--minute video;Better explain how to reproduce it","","","","",""
"2023/12/04 12:02:03 PM GMT+3","quick-xml","SWXMLHash","Fuzi","xgen","libexpat","I have chosen quick-xml as most preferable because it has a lot of closed bug reports and issues. Also last commit was created 2 days ago (active repository). Besides is has 17000 lines of code which is less than 652000 libexpat (this means that quick-xml library could have many features but not so overloaded as libexpat).","Specify its priority and severity;Get rid of the redundant 3--minute video;Better explain how to reproduce it;Read user manual, maybe you do something wrong","","Java Developer","7 years","20 - 30 bugs (as a developer).",""
"2023/12/04 12:40:42 PM GMT+3","quick-xml","SWXMLHash","xgen","libexpat","Fuzi","Rust lang, greate OS track, fresh repo because last commit was 2 days ago","Get rid of the redundant 3--minute video;Better explain how to reproduce it","","Software Developer","6+ years","a few",""
"2023/12/04 12:41:43 PM GMT+3","SWXMLHash","libexpat","Fuzi","quick-xml","xgen","Bugs, contributors, prs","Get rid of the redundant 3--minute video;Read user manual, maybe you do something wrong","","","","",""
"2023/12/04 12:53:39 PM GMT+3","quick-xml","libexpat","SWXMLHash","xgen","Fuzi","How often is the project maintained (last commit), are contributors aware of bugs and closing those (closed bug reports), complexity (lines of code), popularity (stars and forks).","Specify its priority and severity;Better explain how to reproduce it","","","","",""
"2023/12/04 12:55:47 PM GMT+3","quick-xml","SWXMLHash","Fuzi","libexpat","xgen","LOC, last commit, closed bugs, forks","Read user manual, maybe you do something wrong;Better explain how to reproduce it","","","","",""
"2023/12/04 1:37:29 PM GMT+3","libexpat","quick-xml","SWXMLHash","Fuzi","xgen","Number of PRs, Closed Issues, Closed bug reports and Contributors","Read user manual, maybe you do something wrong;Specify its priority and severity;Better explain how to reproduce it","","","17 years ","5",""
"2023/12/04 2:46:55 PM GMT+3","quick-xml","Fuzi","SWXMLHash","xgen","libexpat","Last commit, Stars, Release date, Lines of code","Specify its priority and severity;Get rid of the redundant 3--minute video","","Data Scientist","7","2",""
"2023/12/04 4:56:35 PM GMT+3","libexpat","quick-xml","SWXMLHash","Fuzi","xgen","Closed bug reports, number of closed pull requests, forks, closed issues","Get rid of the redundant 3--minute video;Better explain how to reproduce it","","","","",""
"2023/12/04 9:09:08 PM GMT+3","quick-xml","SWXMLHash","Fuzi","xgen","libexpat","Maintanability of code is based on the amount of lines of code. 

Amount of contributors with activity on code (last commit, release date, closed bugs, amount of forks) shows the popularity of repo that leads to suggestion will this repo has tendency to be abandoned soon.

Libexpat is very strange at first side and i prefer to avoid it as soon as i have something more attractive although it looks very popular.","Get rid of the redundant 3--minute video;Specify its priority and severity;Read user manual, maybe you do something wrong","","Senior backend developer","5+ years in development. 10+ in IT","3-4",""
"2023/12/05 9:09:54 AM GMT+3","quick-xml","Fuzi","SWXMLHash","xgen","libexpat","feature set, safe language, but tracker and community activity","Better explain how to reproduce it;Specify its priority and severity;Get rid of the redundant 3--minute video;Read user manual, maybe you do something wrong","","","","Dozens on OSS projects",""
"2023/12/06 1:51:19 PM GMT+3","Fuzi","xgen","libexpat","SWXMLHash","quick-xml","stars; lines of code; programming language; last commit","Get rid of the redundant 3--minute video;Instead, post to project chat, for a faster fix;Better explain how to reproduce it","","","","",""
"2023/12/06 8:49:52 PM GMT+3","libexpat","SWXMLHash","quick-xml","Fuzi","xgen","Considering every library will work for the project, I aimed immediately to the second and 5th choice because they are the modern ones. I decided that libexpat would be the first choice because it still updates as we can see by commits and SWXMLHash was not updated for a long time. Other options would be lower due to having lower number of stars (libexpat was launched less an year before, so I did no count it in this criteria). Then I decided to put quick-xml because it's updating and Fuzi did not for along time. The last one is xgen because it has the smallest number of stars, was not updated recently and was published lot's of days ago.","Read user manual, maybe you do something wrong;Get rid of the redundant 3--minute video;Specify its priority and severity","","DS team-lead","2 years of education, a half of year of being team-lead in DS team (3-7 teammates)","Did not count that:)",""
"2023/12/06 8:54:21 PM GMT+3","quick-xml","SWXMLHash","Fuzi","libexpat","xgen","I paid attention to closed issues, last commit date, LOC and the programming language. The number of closed issues shows that the project is actually used in the wild. If the last commit date is recent, I can hope that the project is still maintained and will receive bug fixes. LOC may vary, but if it's unreasonably low/high, it's a sign. All in all, quick-xml seems the most robust option (I can see that's used widely), then SWXMLHash (widely used, not too complex), then Fuzi, then libexpat (too many lines of code, and written in a quite unsafe language), then xgen (not sure if one can rely on it in production).","Read user manual, maybe you do something wrong;Specify its priority and severity","","","","",""
"2023/12/06 9:15:38 PM GMT+3","libexpat","quick-xml","xgen","SWXMLHash","Fuzi","c(libexpat) is compatible with all languages (compatibility)
quick-xml looks like the second most popular and developed
xgen(go) is the third since it is not swift and may be run on any platform
SWXMLHash has earlier latest release","Read user manual, maybe you do something wrong;Better explain how to reproduce it","","","","",""
"2023/12/06 9:16:46 PM GMT+3","quick-xml","SWXMLHash","xgen","Fuzi","libexpat","The main metric was last commit, then closed issues and bug reports. Also checked lines of code and 650k libexpat sound sus (C moment).","Specify its priority and severity;Better explain how to reproduce it","","","","",""
"2023/12/06 9:17:22 PM GMT+3","Fuzi","SWXMLHash","libexpat","quick-xml","xgen","Stars, Contributors, forks, closed issues, release days","Read user manual, maybe you do something wrong;Specify its priority and severity","","","","",""
"2023/12/06 9:18:15 PM GMT+3","quick-xml","libexpat","xgen","SWXMLHash","Fuzi","Language, release date, closed issues","Better explain how to reproduce it;Instead, post to project chat, for a faster fix","","","","",""
"2023/12/06 9:25:43 PM GMT+3","SWXMLHash","quick-xml","xgen","libexpat","Fuzi","Stars and forks in proportion to release date (days ago), medium closed bug reports/pull requests/issues (too many means lot of bugs, too few may mean they don't solve it), ","Get rid of the redundant 3--minute video;Read user manual, maybe you do something wrong","","","","",""
"2023/12/06 9:52:06 PM GMT+3","SWXMLHash","Fuzi","quick-xml","libexpat","xgen","По звездочкам","Better explain how to reproduce it;Specify its priority and severity;Get rid of the redundant 3--minute video","","","","",""
"2023/12/06 11:40:39 PM GMT+3","Fuzi","SWXMLHash","libexpat","quick-xml","xgen","1- closed bug reports, then 2- number of stars, then 3- primary language, then 4- release-date, then, there is one option else only","Instead, post to project chat, for a faster fix;Get rid of the redundant 3--minute video","","Innopolis University","R&D in AI, Matlab essentially and sometimes Python","0",""
"2023/12/07 1:09:55 AM GMT+3","libexpat","quick-xml","Fuzi","SWXMLHash","xgen","Stars, forks, lines of code, closed pull requests, contributors","Specify its priority and severity;Read user manual, maybe you do something wrong;Better explain how to reproduce it","","","","",""
"2023/12/07 3:15:58 AM GMT+3","Fuzi","SWXMLHash","xgen","quick-xml","libexpat","For 3: 
- It has 3 years experience.
- It has not much code
For 4:
- A lot of stars
- A lot of contributors
For 5:
- Quite many lines of code
- A lot of issues

But to be honest I don't think that my answers are helpful. Sorry if answer is awful.","Better explain how to reproduce it;Read user manual, maybe you do something wrong","","Android Developer, @Koodrick","1.5 years","0",""
"2023/12/07 10:24:56 AM GMT+3","xgen","libexpat","quick-xml","Fuzi","SWXMLHash","Stars, closed issues and closed bugs","Specify its priority and severity","","","","",""
"2023/12/07 10:26:54 AM GMT+3","xgen","libexpat","quick-xml","Fuzi","SWXMLHash","Stars","Don't report, since it's a primitive bug","","Program manger","+8 years","Many bugs",""
"2023/12/07 11:51:21 AM GMT+3","libexpat","SWXMLHash","Fuzi","quick-xml","xgen","Programming languages, closed bug report, line of code","Better explain how to reproduce it;Don't report, since it's a primitive bug","","","Robotics , embedded C","None",""
"2023/12/07 12:02:52 PM GMT+3","quick-xml","SWXMLHash","Fuzi","libexpat","xgen","quick-xml is the first preference because it appears actively developed (based on many metrics, but mostly on the last commit date). SWXMLHash and Fuzi are quite similar, they are less actively developed but still used, judging by the number of stars. What I disliked about libexpat is that it is a huge library (TWO orders of magnitude larger than xgen, SWXMLHash and Fuzi!) and is in an unsafe language: these two in combination are not attractive. xgen is least preferable because there are few contributors, few stars, few issues, which indicates there isn't a lot of attention towards the library from other developers.","Better explain how to reproduce it;Get rid of the redundant 3--minute video","","None","Below 1 year","10±2",""
"2023/12/07 1:22:54 PM GMT+3","SWXMLHash","libexpat","Fuzi","quick-xml","xgen","Stars, Release date, Closed bug reports","Specify its priority and severity;Read user manual, maybe you do something wrong;Better explain how to reproduce it","","","","",""
"2023/12/07 1:33:54 PM GMT+3","quick-xml","libexpat","SWXMLHash","Fuzi","xgen","Stars, contributors, last commit, closed issues(focus on maintenance)","Instead, post to project chat, for a faster fix;Read user manual, maybe you do something wrong","","","","",""
"2023/12/07 8:39:28 PM GMT+3","quick-xml","SWXMLHash","Fuzi","xgen","libexpat","The most important metrics for me are stars, closed issues, contributors","Instead, post to project chat, for a faster fix;Specify its priority and severity;Read user manual, maybe you do something wrong","","","","",""
"2023/12/07 8:53:07 PM GMT+3","SWXMLHash","quick-xml","Fuzi","xgen","libexpat","closed bug reports/forks/lines of code/stars","Specify its priority and severity;Better explain how to reproduce it","","Intern","4 days","none 😭",""
"2023/12/07 9:36:31 PM GMT+3","libexpat","quick-xml","SWXMLHash","Fuzi","xgen","1. the amount of stars - it basically describes how adopted the technology is.
2. number of lines of code - it reflects how much the product is tested and how many edge cases are covered.
3. release date/last commit date - any product can be improved infinitely more, so the more recent commit it has, the more healthy it is.
4. the language - it is a vague thing to rely on it, but some languages are subjectively more preferable by me than anothers","Read user manual, maybe you do something wrong;Specify its priority and severity;Better explain how to reproduce it;Get rid of the redundant 3--minute video;Instead, post to project chat, for a faster fix","","fullstack (im the only one developer, idk is it lead position?)","startups and a olympiad task development","single one on a open source project i've used",""
"2023/12/07 9:48:35 PM GMT+3","SWXMLHash","quick-xml","Fuzi","libexpat","xgen","Stars, Primary language","Better explain how to reproduce it;Read user manual, maybe you do something wrong","","none","none","0",""
"2023/12/07 10:21:37 PM GMT+3","libexpat","xgen","quick-xml","Fuzi","SWXMLHash","Programming language, last commit, stars - I choose the ones subjectively based on the personal experience.","Read user manual, maybe you do something wrong","","","","",""
"2023/12/07 10:33:07 PM GMT+3","quick-xml","Fuzi","SWXMLHash","xgen","libexpat","Mostly I focused on last commit, then stars, then release date, then forks and finally size of library (number of lines) ","Better explain how to reproduce it;Specify its priority and severity","","Middle backend developer","2 years","I'm fixing the bugs, not reporting them",""
"2023/12/07 10:48:03 PM GMT+3","quick-xml","libexpat","SWXMLHash","Fuzi","xgen","There is an active maintaining of my preferred libraries (e.g closed requests, reported bugs, last commits)","Read user manual, maybe you do something wrong;Specify its priority and severity","","","","",""
"2023/12/08 12:03:11 AM GMT+3","quick-xml","libexpat","Fuzi","xgen","SWXMLHash","Maybe on release day(top 1), Primary language(top 2, more low level) and and Contributors(top 3)","Specify its priority and severity;Better explain how to reproduce it;Read user manual, maybe you do something wrong","","","","",""
"2023/12/08 12:52:58 AM GMT+3","quick-xml","libexpat","SWXMLHash","Fuzi","xgen","I mostly based on the following metrics: Release Date, Last Commit, Forks, Contributors, Closed Issues","Read user manual, maybe you do something wrong;Specify its priority and severity","","","","",""
"2023/12/08 3:58:10 AM GMT+3","quick-xml","libexpat","SWXMLHash","Fuzi","xgen","My preferences are based on the level of maintenance, how regular issues closes, the level of appreciation of the software based on stars. It also could be better to show the correlation between opened/closed issues at the repo. As a suggestion I would also refer to the documentation to validate how accurate and relevant it is. ","Read user manual, maybe you do something wrong;Specify its priority and severity","","Fullstack developer","3 years. ","40+",""
"2023/12/08 5:13:49 AM GMT+3","quick-xml","libexpat","Fuzi","SWXMLHash","xgen","last commit , lines of codes, Stars,","Instead, post to project chat, for a faster fix;Get rid of the redundant 3--minute video;Specify its priority and severity","","Frontend Developer","1.5 year","",""
"2023/12/08 10:20:41 AM GMT+3","quick-xml","SWXMLHash","Fuzi","xgen","libexpat","The library should be small ( not 100500+ lines of code), Rust is a robust language, so it's better. More stars and forks means the library is used more often - also a plus. Moreover it is better if the library is updated not for too long. Higher number of closed issues - the developers care about the product.","Instead, post to project chat, for a faster fix;Read user manual, maybe you do something wrong;Specify its priority and severity","","Lab worker ","1.5 years","0",""
"2023/12/08 11:22:05 AM GMT+3","quick-xml","libexpat","SWXMLHash","Fuzi","xgen","programming language, forks, contributors, closed issues","Specify its priority and severity","","","","",""
"2023/12/08 11:47:40 AM GMT+3","quick-xml","libexpat","SWXMLHash","Fuzi","xgen","Старсы, языки","Read user manual, maybe you do something wrong;Get rid of the redundant 3--minute video","","0","0","0",""
"2023/12/08 11:17:37 PM GMT+3","libexpat","quick-xml","Fuzi","SWXMLHash","xgen","Obviously I look on all metrics, especially number of forks (the more forks, the more community appreciate this lib as a high quality product that is good enough to be forked for your own project), last commit (if the lib is still maintained, then it is valuable and has some demand), closed bug reports/issues (the more of them, the more this lib is tested and verified)","Specify its priority and severity;Get rid of the redundant 3--minute video","","","","",""
"2023/12/09 9:33:51 AM GMT+3","SWXMLHash","Fuzi","xgen","quick-xml","libexpat","My chose is SWXMLHash - 
> It has the second highest number of stars at 1345. More stars generally indicates broader usage and support within the development community.
> It has a relatively high number of contributors at 38. More contributors means more people reviewing and improving the codebase.
> It uses Swift as its primary programming language. For an iOS software architect like myself, using a library written in the native Swift language could provide better integration and performance.
> It has the third lowest number of closed issues at 140. Fewer closed issues signals higher quality and fewer bugs.
> It has an average number of closed pull requests at 114. This shows active development and maintenance of the library.
> The last commit was relatively recently at 179 days ago. This indicates it is still being actively updated.","Better explain how to reproduce it;Specify its priority and severity","","CTO","7y","<10",""
"2023/12/10 10:33:12 AM GMT+3","SWXMLHash","quick-xml","Fuzi","libexpat","xgen","Stars, Last commit, release date, LOC","Read user manual, maybe you do something wrong;Instead, post to project chat, for a faster fix;Don't report, since it's a primitive bug","","","","",""
"2023/12/10 11:04:38 AM GMT+3","quick-xml","libexpat","SWXMLHash","Fuzi","xgen","I try to estimate integral activity developers of library. Something like count of commits for last half-year.","Specify its priority and severity;Read user manual, maybe you do something wrong;Instead, post to project chat, for a faster fix","","Data Analyst","7 years","5",""
